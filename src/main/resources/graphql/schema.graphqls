type Query {
	hello: String
	login: Boolean
	userAll: [User]
	findUserById(id: String!): User
	test: String
	test1: String
	test2: String
	test3: String
	test4: [Product]
	test5: Product
	test6: Product
	test7: [Product]
	test8(param1: String!, param2: String!): User!
	
	notes: [Note!]!
    note(id: ID!): Note!
    user(username: String!): User
    users: [User!]!
    me: User!
    noteFeed(cursor: String): NoteFeed
}

type Mutation {
	deleteUser(id: String!): Boolean
	createUser(username: String!): Boolean
	updateUser(id: String!, username: String!): Boolean
	test(input: UserInput): Int
	
	newNote(content: String!): Note!
    updateNote(id: ID!, content: String!): Note!
    deleteNote(id: ID!): Boolean!
    signUp(username: String!, email: String!, password: String!): String!
    signIn(email: String, password: String!): String!
    toggleFavorite(id: ID!): Note!
}

type Product {
	num: ID!
	title: String
	content: String
}

input UserInput {
	id: ID!
	username: String!
	email: String!
}